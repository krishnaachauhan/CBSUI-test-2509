import GridWrapper, { GridMetaDataType } from "@acuteinfo/common-base";
import { FilterFormMetaType } from "@acuteinfo/common-base";
import { getCIFCategories } from "./api";
import * as API from "./api";
import { t } from "i18next";

export const ckyc_retrieved_meta_data: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "Customer Searching",
    rowIdColumn: "CUSTOMER_ID",
    defaultColumnConfig: {
      width: 150,
      maxWidth: 250,
      minWidth: 100,
    },
    allowColumnReordering: true,
    disableSorting: false,
    hideHeader: false,
    disableGroupBy: true,
    enablePagination: true,
    pageSizes: [10, 20, 30],
    defaultPageSize: 10,
    containerHeight: {
      min: "32vh",
      max: "65vh",
    },
    allowFilter: false,
    allowRowSelection: false,
    allowColumnHiding: false,
    isCusrsorFocused: true,
  },
  // filters: [],
  columns: [
    {
      accessor: "ACTIVE_FLAG",
      columnName: "status",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CUSTOMER_TYPE_NM",
      columnName: "CustomerType",
      sequence: 2,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CUSTOMER_ID",
      columnName: "CustomerId",
      sequence: 3,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CUSTOMER_NAME",
      columnName: "AccountName",
      sequence: 4,
      alignment: "left",
      componentType: "default",
      width: 340,
      minWidth: 240,
      maxWidth: 340,
    },
    {
      accessor: "ADD1",
      columnName: "Add1",
      sequence: 5,
      alignment: "left",
      componentType: "default",
      width: 340,
      minWidth: 240,
      maxWidth: 340,
    },
    {
      accessor: "ADD2",
      columnName: "Add2",
      sequence: 6,
      alignment: "left",
      componentType: "default",
      width: 340,
      minWidth: 240,
      maxWidth: 340,
    },
    {
      accessor: "MASKED_PAN_NO",
      columnName: "PanNo",
      sequence: 7,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "UNIQUE_ID",
      columnName: "UniqueId",
      sequence: 8,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "REQUEST_ID",
      columnName: "ReqNo",
      sequence: 9,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "MASKED_CONTACT2",
      columnName: "MobileNo",
      sequence: 10,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "BRANCH",
      columnName: "Branch",
      sequence: 11,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "KYC_NO",
      columnName: "CkycNo",
      sequence: 12,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "NO_OF_ACCT",
      columnName: "NoOfAccounts",
      sequence: 13,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    // {
    //   accessor: "MAKER",
    //   columnName: "Maker",
    //   sequence: 14,
    //   alignment: "left",
    //   componentType: "default",
    //   width: 140,
    //   minWidth: 140,
    //   maxWidth: 180,
    // },
    // {
    //   columnName: "Remarks",
    //   componentType: "buttonRowCell",
    //   accessor: "REMARKS",
    //   sequence: 10,
    //   buttonLabel: "Remarks",
    //   // isVisible: false,
    //   // __EDIT__: { isVisible: true },
    // },
  ],
};
export const ckyc_pending_req_meta_data: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "",
    rowIdColumn: "REQUEST_ID",
    defaultColumnConfig: {
      width: 150,
      maxWidth: 250,
      minWidth: 100,
    },
    allowColumnReordering: true,
    disableSorting: false,
    hideHeader: false,
    disableGroupBy: true,
    enablePagination: true,
    pageSizes: [10, 20, 30],
    defaultPageSize: 10,
    containerHeight: {
      min: "42vh",
      max: "50vh",
    },
    allowFilter: false,
    allowColumnHiding: false,
    allowRowSelection: false,
    isCusrsorFocused: true,
  },
  filters: [
    {
      accessor: "CUSTOMER_ID",
      columnName: "CustomerId",
      filterComponentType: "valueFilter",
      gridProps: {
        xs: 12,
        md: 12,
        sm: 12,
      },
    },
    {
      accessor: "REQUEST_ID",
      columnName: "Req. ID",
      filterComponentType: "valueFilter",
      gridProps: {
        xs: 12,
        md: 12,
        sm: 12,
      },
    },
    {
      accessor: "CONFIRMED_FLAG",
      columnName: "Confirm Flag",
      filterComponentType: "valueFilter",
      gridProps: {
        xs: 12,
        md: 12,
        sm: 12,
      },
    },
    {
      accessor: "CUSTOMER_NAME",
      columnName: "Customer Name",
      filterComponentType: "valueFilter",
      gridProps: {
        xs: 12,
        md: 12,
        sm: 12,
      },
    },
    {
      accessor: "CUSTOMER_TYPE_FLAG",
      columnName: "Customer Type",
      filterComponentType: "valueFilter",
      gridProps: {
        xs: 12,
        md: 12,
        sm: 12,
      },
    },
    {
      accessor: "UPD_TAB_NAME",
      columnName: "Update Type",
      filterComponentType: "valueFilter",
      gridProps: {
        xs: 12,
        md: 12,
        sm: 12,
      },
    },
    {
      accessor: "MAKER",
      columnName: "Maker",
      filterComponentType: "valueFilter",
      gridProps: {
        xs: 12,
        md: 12,
        sm: 12,
      },
    },
    {
      accessor: "CHECKER",
      columnName: "Checker",
      filterComponentType: "valueFilter",
      gridProps: {
        xs: 12,
        md: 12,
        sm: 12,
      },
    },
  ],
  columns: [
    {
      accessor: "REQUEST_ID",
      columnName: "Req. ID",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "ENTRY_TYPE",
      columnName: "Req. Type", // value for fresh/existing
      sequence: 8,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CONFIRMED_FLAG",
      columnName: "Confirm Flag", // value of fresh/existing
      sequence: 4,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "REMARKS",
      columnName: "Remarks",
      sequence: 3,
      alignment: "left",
      componentType: "default",
      showTooltip: true,
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CUSTOMER_ID",
      columnName: "CustomerId",
      sequence: 6,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CUSTOMER_NAME",
      columnName: "CustomerName",
      sequence: 2,
      alignment: "left",
      componentType: "default",
      showTooltip: true,
      width: 140,
      minWidth: 140,
      maxWidth: 280,
    },
    {
      accessor: "UPD_TAB_NAME",
      columnName: "Update Type",
      sequence: 5,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CUSTOMER_TYPE_FLAG",
      columnName: "CustomerType",
      sequence: 7,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "LAST_MODIFIED",
      columnName: "LastModified",
      sequence: 9,
      alignment: "left",
      dateFormat: "dd/MM/yyyy",
      componentType: "date",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "MAKER",
      columnName: "Maker",
      sequence: 10,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },

    // {
    //   accessor: "CHECKER",
    //   columnName: "Checker",
    //   sequence: 11,
    //   alignment: "center",
    //   componentType: "default",
    //   isReadOnly: true,
    //   width: 140,
    //   minWidth: 140,
    //   maxWidth: 140,
    // },
  ],
};

export const CustRetrieveFormMetadata: any = {
  form: {
    name: "",
    label: "RetrieveTitle",
    resetFieldOnUnmount: false,
    validationRun: "onBlur",
    submitAction: "home",
    render: {
      ordering: "auto",
      renderType: "simple",
      gridConfig: {
        item: {
          xs: 12,
          sm: 12,
          md: 12,
          lg: 12,
          xl: 12,
        },
        container: {
          direction: "row",
          // spacing: 0.5,
        },
      },
    },
    componentProps: {
      textField: {
        fullWidth: true,
      },
      select: {
        fullWidth: true,
      },
      datePicker: {
        fullWidth: true,
      },
      numberFormat: {
        fullWidth: true,
      },
      inputMask: {
        fullWidth: true,
      },
      datetimePicker: {
        fullWidth: true,
      },
    },
  },
  fields: [
    {
      render: {
        componentType: "numberFormat",
      },
      name: "CUSTOMER_ID",
      label: "CustomerId",
      isFieldFocused: true,
      autoComplete: false,
      placeholder: "EnterCustomerId",
      maxLength: 12,
      GridProps: {
        xs: 6,
        sm: 3,
        md: 3,
        lg: 1.5,
        xl: 1.5,
      },
    },
    {
      render: {
        componentType: "textField",
      },
      name: "ACCT_NM",
      label: "CustomerName",
      autoComplete: false,
      maxLength: 100,
      placeholder: "CustomerName",
      GridProps: {
        xs: 6,
        sm: 4,
        md: 3.5,
        lg: 2.5,
        xl: 2.5,
      },
    },
    {
      render: {
        componentType: "panCardOptional",
      },
      name: "PAN_NO",
      label: "PANNo",
      placeholder: "AAAAA1111A",
      autoComplete: false,
      maxLength: 10,
      toUpperCase: true,
      validate: async (columnValue, allFields, flag) => {
        const res: any = await API.validatePAN(columnValue);
        if (res && res?.[0]?.PAN_STATUS === "N") {
          return "PleaseEnterValidPAN";
        }
        return "";
      },
      required: false,
      GridProps: {
        xs: 6,
        sm: 3,
        md: 2,
        lg: 1.5,
        xl: 1.5,
      },
    },
    {
      render: {
        componentType: "numberFormat",
      },
      name: "CONTACT2",
      label: "MobileNo",
      autoComplete: false,
      placeholder: "MobileNo",
      maxLength: 21,
      GridProps: {
        xs: 6,
        sm: 3,
        md: 3,
        lg: 1.5,
        xl: 1.5,
      },
    },

    {
      render: {
        componentType: "numberFormat",
      },
      name: "ACCT_NO",
      label: "AccountNo",
      placeholder: "EnterAccountNumber",
      maxLength: 25,
      autoComplete: false,
      GridProps: {
        xs: 6,
        sm: 4,
        md: 2.5,
        lg: 2.5,
        xl: 2.5,
      },
    },
    {
      render: {
        componentType: "textField",
      },
      name: "E_MAIL_ID",
      label: "EmailId",
      autoComplete: false,
      placeholder: "EnterEmailID",
      postValidationSetCrossFieldValues: async (
        field,
        formState,
        ___,
        dependentFieldsValues
      ) => {
        if (formState?.isSubmitting) return {};
        if (field?.value) {
          const postData = await API.validateEmailID(field?.value);
          const EMAIL_ID_STATUS = postData?.[0]?.EMAIL_ID_STATUS;
          if (EMAIL_ID_STATUS === "0") {
            const btnName = await formState.MessageBox({
              messageTitle: "ValidationFailed",
              message: "PleaseEnterValidEmailID",
              icon: "ERROR",
            });
            if (btnName === "Ok") {
              return {
                E_MAIL_ID: {
                  value: "",
                  ignoreUpdate: false,
                  isFieldFocused: true,
                },
              };
            }
          }
        }
      },
      maxLength: 60,
      GridProps: {
        xs: 6,
        sm: 4,
        md: 3.5,
        lg: 2.5,
        xl: 2.5,
      },
    },
    {
      render: {
        componentType: "numberFormat",
      },
      name: "UNIQUE_ID",
      label: "UniqueId",
      autoComplete: false,
      placeholder: "UniqueId",
      maxLength: 12,
      GridProps: {
        xs: 6,
        sm: 4,
        md: 2,
        lg: 2.5,
        xl: 2.5,
      },
    },
    {
      render: {
        componentType: "numberFormat",
      },
      name: "KYC_NUMBER",
      label: "CkycNo",
      placeholder: "CkycNo",
      maxLength: 25,
      autoComplete: false,
      GridProps: {
        xs: 6,
        sm: 4,
        md: 3.5,
        lg: 2.5,
        xl: 2.5,
      },
    },

    {
      render: {
        componentType: "formbutton",
      },
      name: "RETRIEVE",
      label: "Retrieve",
      isReadOnly: (fieldValue, dependentFields, formState) => {
        return Boolean(formState?.loading);
      },
      ignoreInSubmit: true,
      GridProps: {
        xs: 2,
        md: 1,
        sm: 2,
        lg: 1,
        xl: 1,
      },
    },
  ],
};

// insurance component
export const insurance_grid_meta_data: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "Insurance Details",
    rowIdColumn: "SR_CD",
    defaultColumnConfig: {
      width: 150,
      maxWidth: 250,
      minWidth: 100,
    },
    allowColumnReordering: true,
    disableSorting: false,
    hideHeader: false,
    disableGroupBy: true,
    enablePagination: true,
    pageSizes: [10, 20, 30],
    defaultPageSize: 10,
    containerHeight: {
      min: "60vh",
      max: "80vh",
    },
    allowFilter: false,
    allowColumnHiding: false,
  },
  // filters: [],
  columns: [
    {
      accessor: "SR_CD",
      columnName: "No.",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 100,
      minWidth: 100,
      maxWidth: 150,
    },
    {
      accessor: "POLICY_NO",
      columnName: "Policy No.",
      sequence: 2,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "DATE_OF_INURANCE",
      columnName: "Date Of Insurance",
      sequence: 3,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "SUM_ASSURED",
      columnName: "Sum Assured",
      sequence: 4,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    // {
    //   accessor: "",
    //   columnName: "",
    //   sequence: 2,
    //   alignment: "left",
    //   componentType: "default",
    //   width: 340,
    //   minWidth: 240,
    //   maxWidth: 340,
    // },
    {
      accessor: "ANNUAL_PREMIUM",
      columnName: "Annual Premium",
      sequence: 5,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "PREMIUM_PAID",
      columnName: "Premium Paid Or Surrender Value",
      sequence: 6,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
  ],
};

// bank-details component
export const bank_dtl_grid_meta_data: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "Bank Details",
    rowIdColumn: "SR_CD",
    defaultColumnConfig: {
      width: 150,
      maxWidth: 250,
      minWidth: 100,
    },
    allowColumnReordering: true,
    disableSorting: false,
    hideHeader: false,
    disableGroupBy: true,
    enablePagination: true,
    pageSizes: [10, 20, 30],
    defaultPageSize: 10,
    containerHeight: {
      min: "60vh",
      max: "80vh",
    },
    allowFilter: false,
    allowColumnHiding: false,
  },
  // filters: [],
  columns: [
    {
      accessor: "SR_CD",
      columnName: "No.",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 100,
      minWidth: 100,
      maxWidth: 150,
    },
    {
      accessor: "BANK_NAME",
      columnName: "Bank Name",
      sequence: 2,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "BANK_BRANCH",
      columnName: "Bank Branch",
      sequence: 3,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "TEL_NO",
      columnName: "Tel No.",
      sequence: 4,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "AC_OPEN_DATE",
      columnName: "Ac. Open Date",
      sequence: 5,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "ACCT_TYPE",
      columnName: "Acct. Type",
      sequence: 6,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "OTH_BANK_AC_NO",
      columnName: "Bank A/C No.",
      sequence: 7,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "SANC_LIMIT",
      columnName: "Sanction Limit",
      sequence: 8,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "OS_BALANCE",
      columnName: "O/S Balance",
      sequence: 9,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "AS_ON_DATE",
      columnName: "As On Date",
      sequence: 10,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
  ],
};

// credit-card component, password-type remaining
export const credit_card_dtl_grid_meta_data: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "Credit Card Details",
    rowIdColumn: "SR_CD",
    defaultColumnConfig: {
      width: 150,
      maxWidth: 250,
      minWidth: 100,
    },
    allowColumnReordering: true,
    disableSorting: false,
    hideHeader: false,
    disableGroupBy: true,
    enablePagination: true,
    pageSizes: [10, 20, 30],
    defaultPageSize: 10,
    containerHeight: {
      min: "60vh",
      max: "80vh",
    },
    allowFilter: false,
    allowColumnHiding: false,
  },
  // filters: [],
  columns: [
    {
      accessor: "SR_CD",
      columnName: "No.",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 100,
      minWidth: 100,
      maxWidth: 150,
    },
    {
      accessor: "BANK_NAME",
      columnName: "Bank Name",
      sequence: 2,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "BANK_BRANCH",
      columnName: "Bank Branch",
      sequence: 3,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CARD_NO",
      columnName: "Card No.",
      sequence: 4,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CIF_CARD_TYPE_MST_TRAN_CD",
      columnName: "Card Type",
      sequence: 5,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CARD_ISSUE_DATE",
      columnName: "Card Issue Date",
      sequence: 6,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CARD_EXP_DATE",
      columnName: "Card Exp. Date",
      sequence: 7,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CARD_LIMIT",
      columnName: "Card Limit",
      sequence: 8,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
  ],
};

// offences-detail component, remaining - need change
export const offences_dtl_grid_meta_data: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "Offences Details",
    rowIdColumn: "SR_CD",
    defaultColumnConfig: {
      width: 150,
      maxWidth: 250,
      minWidth: 100,
    },
    allowColumnReordering: true,
    disableSorting: false,
    hideHeader: false,
    disableGroupBy: true,
    enablePagination: true,
    pageSizes: [10, 20, 30],
    defaultPageSize: 10,
    containerHeight: {
      min: "80vh",
      max: "100vh",
    },
    allowFilter: false,
    allowColumnHiding: false,
  },
  // filters: [],
  columns: [
    {
      accessor: "SR_CD",
      columnName: "No.",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 100,
      minWidth: 100,
      maxWidth: 150,
    },
    {
      accessor: "CIF_OFFENCES_TYPE_MST_TRAN_CD",
      columnName: "Type",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "REMARKS",
      columnName: "Remarks",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
  ],
};

// asset-detail component
export const asset_dtl_grid_meta_data: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "Asset Details",
    rowIdColumn: "SR_CD",
    defaultColumnConfig: {
      width: 150,
      maxWidth: 250,
      minWidth: 100,
    },
    allowColumnReordering: true,
    disableSorting: false,
    hideHeader: false,
    disableGroupBy: true,
    enablePagination: true,
    pageSizes: [10, 20, 30],
    defaultPageSize: 10,
    containerHeight: {
      min: "60vh",
      max: "80vh",
    },
    allowFilter: false,
    allowColumnHiding: false,
  },
  // filters: [],
  columns: [
    {
      accessor: "SR_CD",
      columnName: "No.",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 100,
      minWidth: 100,
      maxWidth: 150,
    },
    {
      accessor: "CIF_ASSET_TYPE_MST_TRAN_CD",
      columnName: "Asset Type",
      sequence: 2,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "NO_OF_ASSET",
      columnName: "No. Of Asset",
      sequence: 3,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "REMARKS",
      columnName: "Remarks",
      sequence: 4,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
  ],
};

// financial-detail component
export const financial_dtl_grid_meta_data: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "Financial Details",
    rowIdColumn: "SR_CD",
    defaultColumnConfig: {
      width: 150,
      maxWidth: 250,
      minWidth: 100,
    },
    allowColumnReordering: true,
    disableSorting: false,
    hideHeader: false,
    disableGroupBy: true,
    enablePagination: true,
    pageSizes: [10, 20, 30],
    defaultPageSize: 10,
    containerHeight: {
      min: "80vh",
      max: "100vh",
    },
    allowFilter: false,
    allowColumnHiding: false,
  },
  // filters: [],
  columns: [
    {
      accessor: "SR_CD",
      columnName: "No.",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 100,
      minWidth: 100,
      maxWidth: 150,
    },
    {
      accessor: "CIF_OFFENCES_TYPE_MST_TRAN_CD",
      columnName: "Type",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "REMARKS",
      columnName: "Remarks",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
  ],
};

// controlling-person component
export const controlling_person_dtl_grid_meta_data: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "Controlling Person Details",
    rowIdColumn: "SR_CD",
    defaultColumnConfig: {
      width: 150,
      maxWidth: 250,
      minWidth: 100,
    },
    allowColumnReordering: true,
    disableSorting: false,
    hideHeader: false,
    disableGroupBy: true,
    enablePagination: true,
    pageSizes: [10, 20, 30],
    defaultPageSize: 10,
    containerHeight: {
      min: "60vh",
      max: "80vh",
    },
    allowFilter: false,
    allowColumnHiding: false,
  },
  // filters: [],
  columns: [
    {
      accessor: "SR_CD",
      columnName: "No.",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 100,
      minWidth: 100,
      maxWidth: 150,
    },
    {
      accessor: "ACTIVE",
      columnName: "Active",
      sequence: 2,
      alignment: "left",
      componentType: "editableCheckbox",
      isReadOnly: true,
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CUSTOMER_ID",
      columnName: "Customer ID",
      sequence: 3,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "CUST_NM",
      columnName: "Customer Name",
      sequence: 4,
      alignment: "left",
      componentType: "default",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    {
      accessor: "A",
      columnName: "",
      sequence: 5,
      alignment: "left",
      componentType: "buttonRowCell",
      buttonLabel: "View Detail",
      isVisible: true,
      // dependentOptionField: "COMPONENT_TYPE",
      width: 140,
      minWidth: 140,
      maxWidth: 180,
    },
    // {
    //   columnName: "Config.Props",
    //   componentType: "buttonRowCell",
    //   accessor: "VIEW_DETAIL",
    //   sequence: 4,
    //   buttonLabel: "...",
    //   isVisible: true,
    //   dependentOptionField: "COMPONENT_TYPE",
    //   width: 100,
    //   minWidth: 50,
    //   maxWidth: 150,
    // },
  ],
};
